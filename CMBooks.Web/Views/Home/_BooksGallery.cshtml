@model CMBooks.BussinessLogic.Models.BookVMPaginationModel


@foreach (var book in Model.Books)
{
    <div class="book-container">
        <div class="book-image">
            <img src="@book.PictureUrl" id="@book.Id" onclick="showDetailsModal('@book.Id')">
        </div>
        <div class="book-text">
            <h4 style="margin-top:5px;">@book.Title (@book.Author)</h4>
            <p>| @book.Genre</p>

            <span class="my-rating-@book.Id"></span>
            <div style="margin-top:15px;font-size:15px;max-width:90%">
                <p class="book-description"> @book.Description</p>
            </div>
        </div>
    </div>

}
@if (Model.TotalItems > 3)
{
<div style="background-color:white" id="light-pagination" class="pagination light-theme simple-pagination">

</div>
}

<script type="text/javascript">
        $(function () {
            debugger
            $("#light-pagination").pagination({
                items: @Model.TotalItems,
                itemsOnPage: 3,
                cssStyle: 'light-theme',
                selectOnClick: false,
                currentPage: @Model.Page,
                onPageClick: (pag_nr, ev) => {
                    debugger
                    EasyLoading.show();
                    var activeTabId = $(".tabs .nav-tabs li.fancyTab.active a")[0].id;
                    AjaxHelper.getViewWithoutData(
                        "Home/GetPage?pagNr=" + pag_nr + "&genre=" + activeTabId,
                        function (result) {
                            debugger
                            if (result != null) {
                                $("#partial-view").html(result);

                                $("#light-pagination").pagination({
                                    items: @Model.TotalItems,
                                })
                                EasyLoading.hide();
                              }
                        },
                        function (result) {
                            debugger
                            EasyLoading.hide();
                            toastr.error("An error occured while getting the data!");
                        }
                    );
                }
            });
        });


       var myArray = [];
       debugger
    @foreach (var book in Model.Books)
    {
        @:myArray.push({"BookId":"@book.Id", "Rate":"@book.Rate"});
    }
       myArray.map((book) => {
           $(".my-rating-" + book.BookId).starRating({
               initialRating: book.Rate,
               strokeColor: '#894A00',
               strokeWidth: 10,
               starSize: 25,
               callback: function (currentRating, $el) {
                   var postData = {
                       "UserId": "@Session["UserId"]",
                       "BookId": book.BookId,
                       "Rate1": currentRating
                   }
                   AjaxHelper.post("Rate/CreateRate", postData,
                       function (response) {
                           debugger
                       },
                       function () {
                           debugger
                       }
                   )
                   alert('rated ' + currentRating + 'id ' + book.BookId);
                   console.log('DOM element ', $el);
               }
           });
       })

</script>


